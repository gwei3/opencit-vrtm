RP Crypto Library

Introduction
The RP crypto library implements a  number of cryptogrphic algorithms. This is currently being used for RP projects. The library provides a c/c++ level APIs for cryptographic primitives. This is the first release(May 10, 2013). This is targetted for Linux platforms(Kernel 3.2.44 and above).

Overyview
librpcrypto consists of a number of functionalities and includes cryptographic random number generation, symmetric and public key generation, symmmetric and public key encryption and decryption, cryptographic hash functions and public key (RSA) based signature and verifications. It also includes base64 functionality for enconding/decoding. Finally, it has few functions specifically for  RP crypto library initialization and cleanup.


- Initial release (1.0)
  - public key: RSA encrypt
  - secret key: AES
  - hash:  SHA-1, SHA-256
  - HMAC 
  - modes: CBC
  - converters: Base64
  - key derivation : PBKDF2

Installation:
Untar(tar -xvf <tar file>) the RP Crypto library into a directory of your choice($ROOT). The rp library will be installed there and will have the following directory structure and contents:

$ROOT
└── rp
    ├── examples
    │   ├── PlainText1
    │   ├── rpapisample1.cpp
    │   └── rpapisample1.h
    ├── inc
    │   └── rpapi.h
    ├── lib
    │   └── librpcrypto.a
    ├── ReleaseNotes.txt
    └── RPapidoc.txt

Files:
  - librpcrypto.a : This is the RP Crypto library which needs to be linked to the program using RP Crypto functioanlity.
  - rpapi.h : The .h file that needs to be included by a RP Crypto based program/modules.
  - ReleaseNotes.txt: This file containing the updated release notes.
  - rpapidoc.txt : Contains some documentation about the APIs.
  - rpapisample.cpp,rpapisample.h: A sample program using the RP Crypto APIs.
  - PlainText1: A plaintext file used by the sample program.

Compilation and Execution of the Sample Program:
After untarring the RP Crypto library into the $ROOT directory, cd to rp/examples directory where you will find the sample program(s). Issue the following command at the terminal:

g++ rpapisample1.cpp -o rpapisample1 -L../lib -lrpcrypto

Execute the program by entering the following at the shell prompt:
./rpapisample1

<----------------------------------------------------------------------------------------------->

