This document contains instructions (to be updated) on how to statically link
the Linux kernel for FileProxy.

To set up a static build, the following changes are necessary:
- in make menuconfig: turn off support for loadable modules
- you also might want to go into the general settings and add a "-static" suffix to the release string (this suffix is one of the first options)

The basic static linking procedure for Linux is to turn off dynamic module
loading by unsetting CONFIG_MODULES on the .config file. However, there are a
few quirks with this configuration that still need to be resolved:

1. make install in the kernel doesn't seem to work if there isn't a
/lib/modules directory for this kernel. The easiest way I've found to deal with
this to simply copy over bzImage (build by the make command) to /boot and
update grub by hand.
    disable loadable modules
    add local version
    cp bzImage /boot/staticLinux
    make menuentry in /etc/grub.d/11-tboot
    update-grub

2. the tcioDD driver needs to be added to the static build of the kernel,
probably by putting its directory in drivers/misc in the kernel source tree and
adding its Kbuild information to the Makefile in this directory. However, when
I tried this simple step, I didn't find any evidence in dmesg that tcioDD had
been started properly.
    cp -r cp -r ~/fpDev/fileProxy/Devices SRC/drivers/misc/tcioDD
    # modify SRC/drivers/misc/Makefile to add:
	obj-y := tcioDD/
    cd SRC/drivers/misc/tcioDD
    # modify Kbuild to use full paths for the -I cflags paths
    mv Kbuild Makefile
    cd SRC
    make

3. Even if tcioDD is started properly, udev will have to be modified to add the
tcioDD node in /dev. This involves creating a new config file in
/etc/udev/rules.conf.  [jlm: I think this was fixed by adding create_device.]

4. Change init in intramfs by
	chmod 0777 /dev/tcioDD0
	mount fs (untrusted - nosuid, nodev).  make sure suidperl is NOT installed
	make sure dmcrypt modules are there
	start dmcrypt with generated key for swap
	start tcService -initKeys if no keys present
	start tcService 
	start relevant app

